// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatronesDeSeguridad.Data;

#nullable disable

namespace PatronesDeSeguridad.Migrations
{
    [DbContext(typeof(DbContext1))]
    [Migration("20230831033213_migration1212")]
    partial class migration1212
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.Persona", b =>
                {
                    b.Property<string>("idPersona")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPersona");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblCurso", b =>
                {
                    b.Property<int>("idCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCurso"));

                    b.Property<bool>("EstadoCurso")
                        .HasColumnType("bit");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("nombreCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCurso");

                    b.HasIndex("LevelId");

                    b.ToTable("tblCursos");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblEstudiante", b =>
                {
                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EstadoEstudiante")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentificationNumber");

                    b.HasIndex("GenderId");

                    b.ToTable("tblEstudiantes");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblGenero", b =>
                {
                    b.Property<int>("idGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idGenero"));

                    b.Property<string>("nombreGenero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idGenero");

                    b.ToTable("tblGeneros");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblMateria", b =>
                {
                    b.Property<int>("idMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMateria"));

                    b.Property<bool>("EstadoMateria")
                        .HasColumnType("bit");

                    b.Property<string>("descripcionMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMateria");

                    b.ToTable("tblMaterias");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblMateriaCursoUsuario", b =>
                {
                    b.Property<int>("idMateriaCursoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMateriaCursoUsuario"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoAsignacion")
                        .HasColumnType("bit");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<string>("ProfesorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("identificadorAsignacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMateriaCursoUsuario");

                    b.HasIndex("CursoId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("tblMateriasCursosUsuarios");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblMatriculaEstudiante", b =>
                {
                    b.Property<int>("idMatriculaEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMatriculaEstudiante"));

                    b.Property<int>("AsignacionId")
                        .HasColumnType("int");

                    b.Property<double?>("Calificacion")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<bool>("EstadoMatricula")
                        .HasColumnType("bit");

                    b.Property<string>("EstudianteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCalificacion")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaMatricula")
                        .HasColumnType("datetime2");

                    b.HasKey("idMatriculaEstudiante");

                    b.HasIndex("AsignacionId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("tblMatriculaEstudiantes");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblNivel", b =>
                {
                    b.Property<int>("idNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idNivel"));

                    b.Property<string>("nombreNivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idNivel");

                    b.ToTable("tblNiveles");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblProfesor", b =>
                {
                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EstadoProfesor")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentificationNumber");

                    b.ToTable("tblProfesores");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblCurso", b =>
                {
                    b.HasOne("PatronesDeSeguridad.Models.tblNivel", "Level")
                        .WithMany("Cursos")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblEstudiante", b =>
                {
                    b.HasOne("PatronesDeSeguridad.Models.tblGenero", "Gender")
                        .WithMany("Estudiantes")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblMateriaCursoUsuario", b =>
                {
                    b.HasOne("PatronesDeSeguridad.Models.tblCurso", "Curso")
                        .WithMany("MateriaCursoUsuarios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatronesDeSeguridad.Models.tblMateria", "Materia")
                        .WithMany("MateriaCursoUsuarios")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatronesDeSeguridad.Models.tblProfesor", "Profesor")
                        .WithMany("MateriaCursoUsuarios")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Materia");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblMatriculaEstudiante", b =>
                {
                    b.HasOne("PatronesDeSeguridad.Models.tblMateriaCursoUsuario", "Asignacion")
                        .WithMany("MatriculaEstudiantes")
                        .HasForeignKey("AsignacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatronesDeSeguridad.Models.tblEstudiante", "Estudiante")
                        .WithMany("matriculaEstudiantes")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignacion");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblCurso", b =>
                {
                    b.Navigation("MateriaCursoUsuarios");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblEstudiante", b =>
                {
                    b.Navigation("matriculaEstudiantes");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblGenero", b =>
                {
                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblMateria", b =>
                {
                    b.Navigation("MateriaCursoUsuarios");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblMateriaCursoUsuario", b =>
                {
                    b.Navigation("MatriculaEstudiantes");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblNivel", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("PatronesDeSeguridad.Models.tblProfesor", b =>
                {
                    b.Navigation("MateriaCursoUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
